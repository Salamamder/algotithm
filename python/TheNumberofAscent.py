# https://www.acmicpc.net/problem/11057
# 오르막 수 (백준 11057문제)

# 오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.
# 예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.
# 수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 있다.

# 첫째 줄에 길이가 N인 오르막 수의 개수를 10,007로 나눈 나머지를 출력한다. (중요)

# 길이를 n이라 하면 오름차순을 만족하는 n의 길이의 숫자는 몇개가 존재하는가를 묻는걸로 보임
# 1 -> 10
# 2 -> 55
# 3 -> 220
# 0-> 0
# [0, 10, 55, 220] 현재 점화식

# 2차원의 형태로 결국 끝의 자리보다 같거나 큰 수만 오면서 늘려나가면 되니까
# D[i][j] 라는 형태를 만들어서 i는 마지막에 온 숫자 j는 i보다 크거나 같은 숫자

# 그냥 리스트 0~9 까지 만들고 각 개수 세버리면 되는거 아닌가?
# 1 -> 전부다 1
# 2 -> 
import sys
input = sys.stdin.readline

n = int(input())
# 그렇군 이해했음
# 2차원 할 필요 X
# 1차원 + 변수 형식으로 문제를 풀 수 있을 듯 한가...?
d = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
if n == 1:
    print(sum(d)%10007) 
else: 
    for _ in range(2, n+1):
        for i in range(9, -1, -1):
            d[i] = sum(d[0:i+1])
    print(sum(d)%10007) 

            
